#!/bin/bash

VERSION="v1.0.0"
GUM=$(echo -e "Add\nCommit\nPush" | gum filter)

function checkRelease() {
  LATEST_RELEASE=$(curl -ks https://api.github.com/repos/Piarre/GiTools/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')

  if [[ "$LATEST_RELEASE" != "$VERSION" ]]; then
    echo -e "\e[32mNew update is available: \e[92m$LATEST_RELEASE\e[0m \e[32mat https://github.com/Piarre/GiTools"
    exit 0
  fi
}

function repoExists() {
  if [[ ! -d .git ]]; then
    echo "Not a git repository"
    exit 1
  fi
}

function _add() {
  repoExists
  gum confirm "Stage all ? : " && git add .
  exit 0
}

function _commit() {
  repoExists
  USE_TYPES=$(gum confirm 'Use commit types like "(feat): Added config manager" ?')
  if [[ $USE_TYPES -eq 0 ]]; then
    TYPE=$(gum choose "fix" "feat" "docs" "style" "refactor" "test" "chore" "revert")
    COMMIT_SCOPE=$(gum input --placeholder "($TYPE): Scope")
    if [[ -z $COMMIT_SCOPE ]]; then
      echo "You did not entered a title, the commit will be named '($TYPE): $(date)'"
      GIT_MSG_DESC=$(gum write --width 70 --placeholder "Describe the commit (CTRL+D to finish)")
      gum confirm "Commit changes ?" && git commit -m "($TYPE): $(date)" -m "$GIT_MSG_DESC"
      exit 0
    fi
    GIT_MSG_DESC=$(gum write --width 70 --placeholder "Describe the commit (CTRL+D to finish)")
    gum confirm "Commit changes ?" && git commit -m "($TYPE): $COMMIT_SCOPE" -m "$GIT_MSG_DESC"
    exit 0
  fi
  GIT_MSG_TITLE=$(gum input --placeholder "Title")
  GIT_MSG_DESC=$(gum write --width 70 --placeholder "Describe the commit (CTRL+D to finish)")
  if [[ -z $GIT_MSG_TITLE ]]; then
    GIT_MSG_TITLE="Commit from $(date)"
  fi
  echo "You did not entered a title, the commit will be named 'Commit from $(date)'"
  gum confirm "Commit changes ?" && git commit -m "$GIT_MSG_TITLE" -m "$GIT_MSG_DESC"
  exit 0
}

function _push() {
  repoExists
  gum confirm "Push to origin ?" && git push
  exit 0
}

if [[ $GUM == "Commit" ]]; then
  checkRelease
  _commit
elif [[ $GUM == "Add" ]]; then
  checkRelease
  _add
elif [[ $GUM == "Push" ]]; then
  checkRelease
  _push
fi

checkRelease
